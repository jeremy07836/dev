{"version":3,"sources":["logo.svg","components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOption","setState","e","target","value","searchYelp","preventDefault","_this2","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","Yelp","url","concat","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","bArray","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23de0467.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport './Business.css';\r\n\r\nclass Business extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Business\">\r\n        <div className=\"image-container\">\r\n          <img src={this.props.business.imageSrc} alt={this.props.business.name}/>\r\n        </div>\r\n        <h2>{this.props.business.src}</h2>\r\n        <div className=\"Business-information\">\r\n          <div className=\"Business-address\">\r\n            <p>{this.props.business.address}</p>\r\n            <p>{this.props.business.city}</p>\r\n            <p>{this.props.business.state} {this.props.business.zipCode}</p>\r\n          </div>\r\n          <div className=\"Business-reviews\">\r\n            <h3>{this.props.business.category}</h3>\r\n            <h3 className=\"rating\">{this.props.business.rating} stars</h3>\r\n            <p>{this.props.business.reviewCount} reviews</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Business;\r\n","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business';\r\n\r\nclass BusinessList extends React.Component {\r\n  render() {\r\n    return(\r\n      <div className=\"BusinessList\">\r\n        {\r\n          this.props.businesses.map((business) =>\r\n            <Business business={business} key={business.id} />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BusinessList;\r\n","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst sortByOptions = {\r\n  'Best Match' : 'best_match',\r\n  'Highest Rated' : 'rating',\r\n  'Most Reviewed' : 'review_count'\r\n};\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      term: '',\r\n      location: '',\r\n      sortBy: 'best_match'\r\n    };\r\n\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n    this.handleLocationChange = this.handleLocationChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n  }\r\n\r\n  getSortByClass (sortByOption) {\r\n    if(this.state.sortBy === sortByOption) {\r\n      return 'active';\r\n    } else {\r\n      return '';\r\n    };\r\n  }\r\n\r\n  handleSortByChange(sortByOption) {\r\n    this.setState({\r\n      sortBy: sortByOption\r\n    });\r\n  }\r\n\r\n  handleTermChange(e) {\r\n    this.setState({\r\n      term: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLocationChange(e) {\r\n    this.setState({\r\n      location: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSearch(e) {\r\n    const term = this.state.term;\r\n    const location = this.state.location;\r\n    const sortBy = this.state.sortBy;\r\n    this.props.searchYelp(term, location, sortBy);\r\n    e.preventDefault();\r\n  }\r\n\r\n  renderSortByOptions() {\r\n    return Object.keys(sortByOptions).map(sortByOption => {\r\n      let sortByOptionValue = sortByOptions[sortByOption];\r\n      return (\r\n        <li\r\n        key={sortByOptionValue}\r\n        className={this.getSortByClass(sortByOptionValue)}\r\n        onClick={this.handleSortByChange.bind(this, sortByOptionValue)} >\r\n          {sortByOption}\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"SearchBar\">\r\n        <div className=\"SearchBar-sort-options\">\r\n          <ul>\r\n            {this.renderSortByOptions()}\r\n          </ul>\r\n        </div>\r\n        <div className=\"SearchBar-fields\">\r\n          <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} />\r\n          <input placeholder=\"Where?\" onChange={this.handleLocationChange} />\r\n        </div>\r\n        <div className=\"SearchBar-submit\" >\r\n          <a onClick={this.handleSearch} >Lets Go</a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SearchBar;\r\n","const apiKey = '9RrZexNz079JzbOyoa9m-r97uSYUXuJscsNVEnPwePrr42OUYq_NB27Nwzk-BYpH4FgbgtViNRcIDDP9QBTbInsobFGMaq7xd3bm5FGziXaxNZpmWcIRxrSnJXrPW3Yx';\r\n\r\nexport const Yelp = {\r\n  search(term, location, sortBy) {\r\n    const url = `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`;\r\n\r\n    \r\n    return fetch(url, {\r\n      headers: { Authorization: `Bearer ${apiKey}` }\r\n    }).then(response => {\r\n      return response.json();\r\n    }).then(jsonResponse => {\r\n      if(jsonResponse.businesses) {\r\n        return jsonResponse.businesses.map(business => {\r\n          const obj = {\r\n            id: business.id,\r\n            imageSrc: business.image_url,\r\n            name: business.name,\r\n            address: business.location.address1,\r\n            city: business.location.city,\r\n            state: business.location.state,\r\n            zipCode: business.location.zip_code,\r\n            category: business.categories[0].title,\r\n            rating: business.rating,\r\n            reviewCount: business.review_count\r\n          };\r\n          return obj;\r\n        }\r\n      );\r\n      }\r\n    });\r\n  }\r\n\r\n};\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport BusinessList from './components/BusinessList/BusinessList';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport {Yelp} from './util/Yelp';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: []\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(bArray => {\n      this.setState({\n        businesses: bArray\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}